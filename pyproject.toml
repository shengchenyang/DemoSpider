[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]
name = "DemoSpider"
dynamic = ["version", "readme"]
requires-python = ">=3.9,<4.0"
description = "AyugeSpiderTools 的具体场景实现。"
authors = [
    { name = "ayuge", email = "ayugesheng@gmail.com" },
]
maintainers = [
    { name = "ayuge", email = "ayugesheng@gmail.com" },
]
keywords = ["crawler", "scraping", "aiohttp", "asyncio", "scrapy"]
dependencies = [
    "ayugespidertools[all] (==3.13.0)",
]

[project.urls]
homepage = "https://www.ayuge.top/mkdocs-material/"
repository = "https://github.com/shengchenyang/DemoSpider"
documentation = "https://ayugespidertools.readthedocs.io/en/latest/"

[tool.poetry]
version = "3.12.2"
package-mode = false
readme = ["README.md"]
requires-poetry = "2.1.1"

[tool.poetry.group.dev.dependencies]
ruff = "0.12.12"
pre-commit = "3.5.0"

[tool.ruff.lint]
extend-select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # pydocstyle
    "D",
    # flake8-future-annotations
    "FA",
    # flynt
    "FLY",
    # refurb
    "FURB",
    # isort
    "I",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-logging
    "LOG",
    # Perflint
    "PERF",
    # pygrep-hooks
    "PGH",
    # flake8-pie
    "PIE",
    # pylint
    "PL",
    # flake8-pytest-style
    "PT",
    # flake8-use-pathlib
    "PTH",
    # flake8-pyi
    "PYI",
    # flake8-quotes
    "Q",
    # flake8-return
    "RET",
    # flake8-raise
    "RSE",
    # Ruff-specific rules
    "RUF",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # flake8-slots
    "SLOT",
    # flake8-debugger
    "T10",
    # flake8-type-checking
    "TC",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
    # pycodestyle warnings
    "W",
    # flake8-2020
    "YTT",
]
ignore = [
    # Ones we want to ignore

    # Missing docstring in public module
    "D100",
    # Missing docstring in public class
    "D101",
    # Missing docstring in public method
    "D102",
    # Missing docstring in public function
    "D103",
    # Missing docstring in public package
    "D104",
    # Missing docstring in magic method
    "D105",
    # Missing docstring in public nested class
    "D106",
    # Missing docstring in __init__
    "D107",
    # One-line docstring should fit on one line with quotes
    "D200",
    # No blank lines allowed after function docstring
    "D202",
    # 1 blank line required between summary line and description
    "D205",
    # Multi-line docstring closing quotes should be on a separate line
    "D209",
    # First line should end with a period
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    # First line should not be the function's "signature"
    "D402",
    # First word of the first line should be properly capitalized
    "D403",
    # `try`-`except` within a loop incurs performance overhead
    "PERF203",
    # Import alias does not rename original package
    "PLC0414",
    # Too many return statements
    "PLR0911",
    # Too many branches
    "PLR0912",
    # Too many arguments in function definition
    "PLR0913",
    # Too many statements
    "PLR0915",
    # Magic value used in comparison
    "PLR2004",
    # `for` loop variable overwritten by assignment target
    "PLW2901",
    # String contains ambiguous {}.
    "RUF001",
    # Docstring contains ambiguous {}.
    "RUF002",
    # Comment contains ambiguous {}.
    "RUF003",
    # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF012",
    # Use of `assert` detected; needed for mypy
    "S101",
    # FTP-related functions are being called; https://github.com/scrapy/scrapy/issues/4180
    "S321",
    # Argument default set to insecure SSL protocol
    "S503",
    # Use a context manager for opening files
    "SIM115",
    # Yoda condition detected
    "SIM300",
]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
# Circular import workarounds
"DemoSpider/common/mq.py" = ["RET504", "RET503", "PLE0605"]
"DemoSpider/middlewares.py" = ["UP028", "UP031"]
"DemoSpider/run.py" = ["S605", "S607"]
"DemoSpider/spiders/demo_aiomysql.py" = ["S311"]
"DemoSpider/spiders/demo_eight.py" = ["S311"]
"DemoSpider/spiders/demo_eleven.py" = ["S311"]
"DemoSpider/spiders/demo_six.py" = ["S311"]
"DemoSpider/spiders/demo_ten.py" = ["S311"]
"DemoSpider/spiders/demo_two.py" = ["S311"]
"DemoSpider/spiders/demo_mongo_async.py" = ["S311"]
"DemoSpider/spiders/demo_five.py" = ["S311"]
"DemoSpider/spiders/demo_nine.py" = ["S311"]
"DemoSpider/spiders/demo_one.py" = ["S311"]
"DemoSpider/spiders/demo_oracle.py" = ["S311"]
"DemoSpider/spiders/demo_oracle_async.py" = ["S311"]
"DemoSpider/spiders/demo_oracle_twisted.py" = ["S311"]
"DemoSpider/spiders/demo_es.py" = ["SIM105"]
"DemoSpider/spiders/demo_es_async.py" = ["SIM105"]
"DemoSpider/spiders/demo_file_sec.py" = ["S324"]
"DemoSpider/spiders/demo_oss_sec.py" = ["S324", "S106"]


[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
